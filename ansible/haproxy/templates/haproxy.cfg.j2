global
    log /dev/log local0 debug
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Aumenta limite de conexões
    maxconn 50000

defaults
    log     global
    mode    tcp
    option  dontlognull
    option dontlog-normal
    option  tcp-smart-accept
    option  tcp-smart-connect
    timeout connect {{ timeout_connect }}
    timeout client  {{ timeout_client }}
    timeout server  {{ timeout_server }}
    timeout check   5s

# Frontend para o Kubernetes API Server
frontend k8s_api
    bind *:{{ porta_kubeapiserver }}
    mode tcp
    option tcplog
    default_backend k8s_api_backend

# Frontend para a porta HTTP do etcd
frontend etcd_https
    bind *:{{ porta_etcd_https }}
    mode tcp
    option tcplog
    default_backend etcd_https_backend

# Backend para o Kubernetes API Server
backend k8s_api_backend
    mode tcp
    balance roundrobin
    option tcp-check
    timeout tunnel 1h
    timeout client 3h
    timeout server 3h
{% for host in groups['managers'] %}
    server {{ host }} {{ hostvars[host]['ansible_host'] }}:{{ porta_kubeapiserver }} check inter 3 rise 2 fall 3
{% endfor %}

# Backend para a porta HTTPS do etcd
backend etcd_https_backend
    mode tcp
    balance roundrobin
    option tcp-check
    timeout tunnel 1h
{% for host in groups['managers'] %}
    server {{ host }} {{ hostvars[host]['ansible_host'] }}:{{ porta_etcd_https }} check port {{ porta_etcd_metricas }} inter 3 rise 2 fall 3
{% endfor %}

# Frontend para estatísticas e administração
frontend stats
    bind *:{{ porta_haproxy_stats }}
    mode http
    stats enable
    stats uri /stats
    stats show-node
    stats show-legends
    stats show-desc K8s e etcd
    stats refresh 10s
    stats admin if TRUE
    stats auth {{ haproxy_stats_usr }}:{{ haproxy_stats_senha }}

    http-request use-service prometheus-exporter if { path /metrics }
