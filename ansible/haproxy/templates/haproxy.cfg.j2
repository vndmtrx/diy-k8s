# Template de configuração do HAProxy
# Configuração global e padrões
global
    log /dev/log local0
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Aumenta limite de conexões
    maxconn 50000

defaults
    log     global
    mode    tcp
    option  dontlognull
    option  tcp-smart-accept
    option  tcp-smart-connect
    timeout connect {{ timeout_connect }}
    timeout client  {{ timeout_client }}
    timeout server  {{ timeout_server }}

# Frontend para o Kubernetes API Server
frontend k8s_api
    bind *:{{ porta_kubeapiserver }}
    mode tcp
    option tcplog
    default_backend k8s_api_backend

# Frontend para o etcd
frontend etcd
    bind *:{{ porta_etcd }}
    mode tcp
    option tcplog
    default_backend etcd_backend

# Backend para o Kubernetes API Server
backend k8s_api_backend
    mode tcp
    balance roundrobin
    option tcp-check
    # Health check para o apiserver (SSL/TLS)
    option ssl-hello-chk
{% for host in groups['managers'] %}
    server {{ host }} {{ hostvars[host]['ansible_host'] }}:{{ porta_kubeapiserver }} check
{% endfor %}

# Backend para o etcd
backend etcd_backend
    mode tcp
    balance roundrobin
    option tcp-check
    # Health check via porta de métricas
    option httpchk GET /health
    http-check expect status 200
{% for host in groups['managers'] %}
    server {{ host }} {{ hostvars[host]['ansible_host'] }}:{{ porta_etcd }} check port {{ porta_etcd_metricas }}
{% endfor %}

# Frontend para estatísticas
frontend stats
    bind *:{{ haproxy_porta_stats }}
    mode http
    stats enable
    stats uri /stats
    stats show-node
    stats show-legends
    stats show-desc K8s e etcd
    stats refresh 10s
    stats auth {{ haproxy_stats_user }}:{{ haproxy_stats_password }}
