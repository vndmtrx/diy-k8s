# ansible/pki/tasks/11-cert_service_account.yml
---
- name: Verificar arquivos existentes do service-account
  ansible.builtin.stat:
    path: "{{ item }}"
  loop:
    - "{{ certs.service_account.chave }}"
    - "{{ certs.service_account.csr }}"
    - "{{ certs.service_account.cert }}"
  register: service_account_arquivos

- name: Gerar chave RSA para service-account
  community.crypto.openssl_privatekey:
    path: "{{ certs.service_account.chave }}"
    type: "RSA"
    size: 2048
    state: "present"
    force: "{{ pki_regerar_certs | default(false) | bool }}"
  when: not service_account_arquivos.results[0].stat.exists or (pki_regerar_certs | default(false) | bool)

- name: Gerar CSR para service-account
  community.crypto.openssl_csr:
    path: "{{ certs.service_account.csr }}"
    privatekey_path: "{{ certs.service_account.chave }}"
    digest: "sha256"
    mode: "0600"
    owner: "root"
    group: "root"
    CN: "service-accounts"
    O: "{{ pki_organizacao }}"
    OU:
      - "{{ pki_organizacao }}"
      - "Conta de Servi√ßo do Kubernetes"
    key_usage:
      - digitalSignature
      - keyEncipherment
    key_usage_critical: true
    force: "{{ pki_regerar_certs | default(false) | bool }}"
  when: not service_account_arquivos.results[1].stat.exists or (pki_regerar_certs | default(false) | bool)

- name: Gerar certificado do service-account
  community.crypto.x509_certificate:
    path: "{{ certs.service_account.cert }}"
    csr_path: "{{ certs.service_account.csr }}"
    provider: ownca
    ownca_digest: "{{ pki_algoritmo_hash }}"
    ownca_path: "{{ certs.ca_k8s.cert }}"
    ownca_privatekey_path: "{{ certs.ca_k8s.chave }}"
    ownca_not_after: "+{{ pki_validade_cert }}d"
    mode: "0644"
    owner: "root"
    group: "root"
    force: "{{ pki_regerar_certs | default(false) | bool }}"
  when: not service_account_arquivos.results[2].stat.exists or (pki_regerar_certs | default(false) | bool)
