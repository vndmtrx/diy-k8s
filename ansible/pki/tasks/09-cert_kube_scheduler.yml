# ansible/pki/tasks/09-cert_kube_scheduler.yml
---
- name: Verificar se a chave do kube-scheduler já existe ({{ manager_host }})
  ansible.builtin.stat:
    path: "{{ certs.kube_scheduler.chave | format(manager_host) }}"
  register: kube_scheduler_chave

- name: Gerar chave Ed25519 para kube-scheduler ({{ manager_host }})
  community.crypto.openssl_privatekey:
    path: "{{ certs.kube_scheduler.chave | format(manager_host) }}"
    type: "{{ pki_tipo_curva }}"
    state: "present"
    force: "{{ pki_regerar_certs | default(false) | bool }}"
  when: not kube_scheduler_chave.stat.exists or (pki_regerar_certs | default(false) | bool)

- name: Verificar se o CSR do kube-scheduler já existe ({{ manager_host }})
  ansible.builtin.stat:
    path: "{{ certs.kube_scheduler.csr | format(manager_host) }}"
  register: kube_scheduler_csr

- name: Gerar CSR para kube-scheduler ({{ manager_host }})
  community.crypto.openssl_csr:
    path: "{{ certs.kube_scheduler.csr | format(manager_host) }}"
    privatekey_path: "{{ certs.kube_scheduler.chave | format(manager_host) }}"
    digest: "{{ pki_algoritmo_hash }}"
    mode: "0600"
    owner: "root"
    group: "root"
    CN: "system:kube-scheduler"
    O: "system:kube-scheduler"
    OU: "{{ pki_organizacao }}"
    OU: "Kube Scheduler"
    key_usage:
      - digitalSignature
    key_usage_critical: true
    extended_key_usage:
      - clientAuth
    extended_key_usage_critical: true
    subject_alt_name: "{{ lookup('template', 'kube_scheduler_san.j2') | from_yaml }}"
    force: "{{ pki_regerar_certs | default(false) | bool }}"
  when: not kube_scheduler_csr.stat.exists or (pki_regerar_certs | default(false) | bool)

- name: Verificar se o certificado do kube-scheduler já existe ({{ manager_host }})
  ansible.builtin.stat:
    path: "{{ certs.kube_scheduler.cert | format(manager_host) }}"
  register: kube_scheduler_cert

- name: Gerar certificado do kube-scheduler ({{ manager_host }})
  community.crypto.x509_certificate:
    path: "{{ certs.kube_scheduler.cert | format(manager_host) }}"
    csr_path: "{{ certs.kube_scheduler.csr | format(manager_host) }}"
    provider: ownca
    ownca_digest: "{{ pki_algoritmo_hash }}"
    ownca_path: "{{ certs.ca_k8s.cert }}"
    ownca_privatekey_path: "{{ certs.ca_k8s.chave }}"
    ownca_not_after: "+{{ pki_validade_cert }}d"
    mode: "0644"
    owner: "root"
    group: "root"
    force: "{{ pki_regerar_certs | default(false) | bool }}"
  when: not kube_scheduler_cert.stat.exists or (pki_regerar_certs | default(false) | bool)