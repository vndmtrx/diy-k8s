# ansible/pki/tasks/07-cert_haproxy_apiserver.yml
---
- name: Verificar se a chave do kube-apiserver para HAProxy já existe
  ansible.builtin.stat:
    path: "/vagrant/arquivos/pki/kubernetes/kube-apiserver-haproxy-chave.pem"
  register: kube_apiserver_haproxy_chave

- name: Gerar chave Ed25519 para kube-apiserver do HAProxy
  community.crypto.openssl_privatekey:
    path: "/vagrant/arquivos/pki/kubernetes/kube-apiserver-haproxy-chave.pem"
    type: "{{ pki_tipo_curva }}"
    state: "present"
    force: "{{ pki_regerar_certs | bool }}"
  when: not kube_apiserver_haproxy_chave.stat.exists or pki_regerar_certs | bool

- name: Verificar se o CSR do kube-apiserver para HAProxy já existe
  ansible.builtin.stat:
    path: "/vagrant/arquivos/pki/kubernetes/kube-apiserver-haproxy.csr"
  register: kube_apiserver_haproxy_csr

- name: Gerar CSR para kube-apiserver do HAProxy
  community.crypto.openssl_csr:
    path: "/vagrant/arquivos/pki/kubernetes/kube-apiserver-haproxy.csr"
    privatekey_path: "/vagrant/arquivos/pki/kubernetes/kube-apiserver-haproxy-chave.pem"
    digest: "{{ pki_algoritmo_hash }}"
    mode: "0600"
    owner: "root"
    group: "root"
    CN: "kube-apiserver-lb"
    O: "{{ pki_organizacao }}"
    OU: "API Server LoadBalancer"
    key_usage:
      - digitalSignature
    key_usage_critical: true
    extended_key_usage:
      - serverAuth
    extended_key_usage_critical: true
    subject_alt_name: "{{ lookup('template', 'kube_apiserver_haproxy_san.j2') | from_yaml }}"
    force: "{{ pki_regerar_certs | bool }}"
  when: not kube_apiserver_haproxy_csr.stat.exists or pki_regerar_certs | bool

- name: Verificar se o certificado do kube-apiserver para HAProxy já existe
  ansible.builtin.stat:
    path: "/vagrant/arquivos/pki/kubernetes/kube-apiserver-haproxy-cert.pem"
  register: kube_apiserver_haproxy_cert

- name: Gerar certificado do kube-apiserver para HAProxy
  community.crypto.x509_certificate:
    path: "/vagrant/arquivos/pki/kubernetes/kube-apiserver-haproxy-cert.pem"
    csr_path: "/vagrant/arquivos/pki/kubernetes/kube-apiserver-haproxy.csr"
    provider: ownca
    ownca_digest: "{{ pki_algoritmo_hash }}"
    ownca_path: "/vagrant/arquivos/pki/kubernetes/ca-kubernetes-cert.pem"
    ownca_privatekey_path: "/vagrant/arquivos/pki/kubernetes/ca-kubernetes-chave.pem"
    ownca_not_after: "+{{ pki_validade_cert }}d"
    mode: "0644"
    owner: "root"
    group: "root"
    force: "{{ pki_regerar_certs | bool }}"
  when: not kube_apiserver_haproxy_cert.stat.exists or pki_regerar_certs | bool